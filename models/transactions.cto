namespace com.chaincontrol.transactions

import com.chaincontrol.assets.* 
import com.chaincontrol.participants.*

transaction ReNameCase { //.js complete in case.js
    --> Case myCase
    o String newName
    o String oldName optional
}

transaction objectPermission { //specify perm parameters (asset type and ID, perm level)
  o permissionAsset object //asset for permission (PrecinctPermission, CasePermission, or EvidencePermission)
  o permissionType permission //access to view, authorization to add 
  o String objectID //specify object ID... return invalid if object type doesn't correlate with ID
  --> PermissionRequest request
  --> user requestor
}

transaction modifyPermission{
  --> user modified //officer or user subject to permission change
  --> user modifier //ADMIN submitting transaction to stripped
  o permissionType newPermission
  o permissionAsset object
  o String objectID //ID of asset for new permission level
}

transaction migrateOfficer{ //.js complete in admin.js
  //ADMIN - change officer's employment precinct
  --> Precinct newPrecinct
  --> Precinct oldPrecinct optional
  --> user officer
}

transaction nullifyOfficer{ //.js complete in admin.js
  //ADMIN - officer fired or permissions stripped
  --> user officer
}

transaction physicalCheckoutRequest{
  o String duration
  --> Evidence evidenceID
  --> user authorized
}

transaction physicalCheckoutUpdate{
  o checkoutNote status
  --> user checkoutMGMT
}

transaction newCase{  //.js complete in case.js REVISE
  //OFFICER - add case to precinct
  --> Case newCase
  --> Precinct inPrecinct
}

transaction newEvidence{  //.js complete in case.js REVISE
  //OFFICER - add evidence to case (req cAuth)
  --> user authorized
  --> Evidence newEvidence optional
  --> Case inCase
}

transaction closeCase{ //.js complete in case.js
  //ADMIN - mark case as closed (change 'open' boolean to false)
  --> Case caseID
  --> user closer
}


event PrecinctAuthGranted {
  --> Precinct asset
  --> Officer pAuth
  o String newValue
}

event EvidenceCheckedOut {
  --> Evidence checkedOut
  --> Officer checkedOutBy
  o String newValue
  o String checkOutDuration
}

event EvidenceReturned {
  --> Evidence checkedOut
  o String newValue
}

event EvidenceAccessed {
  --> Evidence evidenceID
  --> Officer officerID //officer or participant?
  --> Participant participantID
  o String notes
}

event AdministratorAction {
  --> Administrator administratorID
  --> Officer requestor //officer or participant
  o String transactionID
  o Boolean approved
  o String notes
}