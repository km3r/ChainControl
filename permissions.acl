/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */
// rule EverybodyCanReadEverything {
//     description: "Allow all participants read access to all resources"
//     participant: "org.example.basic.SampleParticipant"
//     operation: READ
//     resource: "org.example.basic.*"
//     action: ALLOW
// }

// rule EverybodyCanSubmitTransactions {
//     description: "Allow all participants to submit transactions"
//     participant: "org.example.basic.SampleParticipant"
//     operation: CREATE
//     resource: "org.example.basic.SampleTransaction"
//     action: ALLOW
// }

// rule OwnerHasFullAccessToTheirAssets {
//     description: "Allow all participants full access to their assets"
//     participant(p): "org.example.basic.SampleParticipant"
//     operation: ALL
//     resource(r): "org.example.basic.SampleAsset"
//     condition: (r.owner.getIdentifier() === p.getIdentifier())
//     action: ALLOW
// }

// rule SystemACL {
//     description: "System ACL to permit all access"
//     participant: "org.hyperledger.composer.system.Participant"
//     operation: ALL
//     resource: "org.hyperledger.composer.system.**"
//     action: ALLOW
// }

// rule NetworkAdminUser {
//     description: "Grant business network administrators full access to user resources"
//     participant: "org.hyperledger.composer.system.NetworkAdmin"
//     operation: ALL
//     resource: "**"
//     action: ALLOW
// }

// rule NetworkAdminSystem {
//     description: "Grant business network administrators full access to system resources"
//     participant: "org.hyperledger.composer.system.NetworkAdmin"
//     operation: ALL
//     resource: "org.hyperledger.composer.system.**"
//     action: ALLOW
// }

rule AdminAllAccesss{
      description: "Administrators all access"
      participant: "com.chaincontrol.participants.Administrator"
      operation: READ, CREATE, UPDATE
      resource: "com.chaincontrol.assets"
      condition: ((resource != Precinct) && (participant.pAuth.indexOf(asset.homePrecinct) >= 0))
      action: ALLOW
}

rule OfficerCaseAuth{
    description: "Officers can create and read cases within their precincts"
    participant (p): "com.chaincontrol.participants.Officer"
    operation: READ, CREATE
    resource(x): "com.chaincontrol.assets.Case"
    condition: (p.disabled == false && (p.pAuth.indexOf(x.homePrecinct) >= 0))
    action: ALLOW   
}

rule OfficerEvidenceAuth{
    description: "Officers can create and read evidence within their authorized cases"
    participant (p): "com.chaincontrol.participants.Officer"
    operation: READ, CREATE
    resource(x): "com.chaincontrol.assets.Evidence"
    condition: (p.disabled == false && (p.cAuth.indexOf(x.caseOrigin) >= 0))
    action: ALLOW   
}

rule OfficerPrecinctViewership{
    description: "Officers can read all case information within authorized precincts"
    participant (p): "com.chaincontrol.participants.Officer"
    operation: READ
    resource(x): "com.chaincontrol.assets.Precinct"
    condition: (p.disabled == false && (p.pAuth.indexOf(x) >= 0))
    action: ALLOW
}

rule ThirdPartyCaseAccess{
    description: "Third Parties can read information and evidence in their authorized cases"
    participant (p): "com.chaincontrol.participants.ThirdParty"
    operation: READ
    resource(x): "com.chaincontrol.assets.Case"
    condition: (p.disabled == false && (p.cAuth.indexOf(x) >= 0))
    action: ALLOW  
}

rule ThirdPartyEvidenceAccess{
    description: "Third Parties can read evidence in their authorized cases or that they are explicitly authorized to read"
    participant (p): "com.chaincontrol.participants.ThirdParty"
    operation: READ
    resource(x): "com.chaincontrol.assets.Evidence"
    condition: (p.disabled == false && ((p.cAuth.indexOf(x.caseOrigin) >= 0) || (p.eAuth.indexOf(x) >=0)))
    action: ALLOW 
}

rule EverybodyPermissionRequests{
    description: "Any active user can request permissions"
    participant (p): "com.chaincontrol.participants.**"
    operation: CREATE
    resource(x): "com.chaincontrol.assets.PermissionRequest"
    condition: (p.disabled == false)
    action: ALLOW
}

rule onlyCheckoutMgmt{
    description: "Only on-duty CheckoutMgmt users can update physical evidence checkout requests"
    participant (p): "com.chaincontrol.participants.CheckoutMgmt"
    operation: UPDATE
    resource(x): "com.chaincontrol.assets.EvidenceCheckout"
    condition: (p.onDuty == true)
    action: ALLOW
}

rule onlyAuthorizedCheckoutRequests{
    description: "Users may only create a checkout request for authorized evidence"
    participant (p): "com.chaincontrol.participants.**"
    operation: CREATE
    resource(x): "com.chaincontrol.assets.CheckoutRequest"
    transaction(tx): "com.chaincontrol.transactions.physicalCheckoutRequest"
    condition: (p.disabled == false && ((p.eAuth.indexOf(tx.evidenceID) >= 0) || (p.cAuth.indexOf(tx.evidenceID.caseOrigin) >=0))) //either evidence explicitly in eAuth array or case within cAuth jurisdiction
    action: ALLOW 
}